#include "ros/ros.h"

#include "std_msgs/Float64.h"
#include "std_msgs/Float64MultiArray.h"


float j1_vel = 0.0;
float j2_vel = 0.0;
// float j3_vel = 0.0; // used only in case of 3 joints

// This node acts as an interface between the Control algorithm and hardware. 
// It subscribes to velocities generated by the VS controller and publishes these to the robot

void jointVelCallback(const::std_msgs::Float64MultiArray &msg){

    j1_vel = msg.data.at(0);
    j2_vel = msg.data.at(1);
    // j3_vel = msg.data.at(2); //comment/unc0mment depending on number of joints used
}

int main(int argc, char **argv){

    ros::init(argc, argv, "joint_hardware_interface");
    ros::NodeHandle n;
    
    // Subscribers
    ros::Subscriber joint_vel_sub = n.subscribe("joint_vel", 1, jointVelCallback);
    
    // Publishers
    ros::Publisher franka_joint_vel_pub = n.advertise<std_msgs::Float64MultiArray>("/joint_group_velocity_controller/command",1);

    // Read params from yaml
    
    float rate;
    n.getParam("vsbot/estimation/rate",rate);

    ros::Rate r{rate};
    
    // Rate Loop
    while(ros::ok()){
        
        std_msgs::Float64MultiArray franka_joint_vel;
        
        // Comment - This block is to activate 2 joints
        franka_joint_vel.data.push_back(0);
        franka_joint_vel.data.push_back(j1_vel);    // joint 2 on Franka
        franka_joint_vel.data.push_back(0);     
        franka_joint_vel.data.push_back(j2_vel);    // joint 4 on Franka
        franka_joint_vel.data.push_back(0);
        franka_joint_vel.data.push_back(0);
        franka_joint_vel.data.push_back(0);


        // Comment - This block is to activate 3 joints in planar
        // franka_joint_vel.data.push_back(0);
        // franka_joint_vel.data.push_back(j1_vel);    // joint 2 on Franka
        // franka_joint_vel.data.push_back(0);     
        // franka_joint_vel.data.push_back(j2_vel);    // joint 4 on Franka
        // franka_joint_vel.data.push_back(0);
        // franka_joint_vel.data.push_back(j3_vel);    // joint 5 on Franka
        // franka_joint_vel.data.push_back(0);


        // Comment - This block is to activate 3D motion
        // franka_joint_vel.data.push_back(j1_vel);    // base joint on Franka
        // franka_joint_vel.data.push_back(j2_vel);    // joint 2 on Franka
        // franka_joint_vel.data.push_back(0);     
        // franka_joint_vel.data.push_back(j3_vel);    // joint 4 on Franka
        // franka_joint_vel.data.push_back(0);
        // franka_joint_vel.data.push_back(0);
        // franka_joint_vel.data.push_back(0);

        franka_joint_vel_pub.publish(franka_joint_vel);

        ros::spinOnce();
        r.sleep();
    }
    return 0;
}