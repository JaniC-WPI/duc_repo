panda:                    #useful if you use a namespace for the robot
    # Publish joint states
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 50
        
    joint1_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint1
        pid: {p: 30.0, i: 0.00, d: 0}

    joint2_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint2
        pid: {p: 30.0, i: 0.00, d: 0}
        
    joint3_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint3
        pid: {p: 30.0, i: 0.00, d: 0}

    joint4_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint4
        pid: {p: 30.0, i: 0.00, d: 0}
    
    joint5_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint5
        pid: {p: 30.0, i: 0.00, d: 0}

    joint6_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint6
        pid: {p: 30.0, i: 0.00, d: 0}
        
    joint7_velocity_controller:
        type: velocity_controllers/JointVelocityController
        joint: panda_joint7
        pid: {p: 30.0, i: 0.00, d: 0}            
    
    panda_finger1_controller:
        type: effort_controllers/JointPositionController
        joint: panda_finger_joint1
        pid: { p: 100000, d: 10.0, i: 0, i_clamp: 1 }            
    panda_finger2_controller:
        type: effort_controllers/JointPositionController
        joint: panda_finger_joint2
        pid: { p: 100000, d: 20.0, i: 0, i_clamp: 1 }

    joint1_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint1
        pid: {p: 100000.0, i: 0.00, d: 50}

    joint2_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint2
        pid: {p: 100000.0, i: 0.00, d: 50}
        
    joint3_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint3
        pid: {p: 100000.0, i: 0.00, d: 50}

    joint4_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint4
        pid: {p: 100000.0, i: 0.00, d: 50}
    
    joint5_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint5
        pid: {p: 100000.0, i: 0.00, d: 50}

    joint6_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint6
        pid: {p: 100000.0, i: 0.00, d: 50}
        
    joint7_position_controller:
        type: velocity_controllers/JointPositionController
        joint: panda_joint7
        pid: {p: 100000.0, i: 0.00, d: 50}   

    joint_names:
        - panda_joint1
        - panda_joint2
        - panda_joint3
        - panda_joint4
        - panda_joint5
        - panda_joint6
        - panda_joint7
    # Configure the threshold angle for printing joint limit warnings.
    joint_limit_warning_threshold: 0.1 # [rad]
    # Activate rate limiter? [true|false]
    rate_limiting: true
    # Cutoff frequency of the low-pass filter. Set to >= 1000 to deactivate.
    cutoff_frequency: 100
    # Internal controller for motion generators [joint_impedance|cartesian_impedance]
    internal_controller: joint_impedance
    # Used to decide whether to enforce realtime mode [enforce|ignore]
    realtime_config: enforce
    # Configure the initial defaults for the collision behavior reflexes.
    collision_config:
      lower_torque_thresholds_acceleration: [20.0, 20.0, 18.0, 18.0, 16.0, 14.0, 12.0]  # [Nm]
      upper_torque_thresholds_acceleration: [20.0, 20.0, 18.0, 18.0, 16.0, 14.0, 12.0]  # [Nm]
      lower_torque_thresholds_nominal: [20.0, 20.0, 18.0, 18.0, 16.0, 14.0, 12.0]  # [Nm]
      upper_torque_thresholds_nominal: [20.0, 20.0, 18.0, 18.0, 16.0, 14.0, 12.0]  # [Nm]
      lower_force_thresholds_acceleration: [20.0, 20.0, 20.0, 25.0, 25.0, 25.0]  # [N, N, N, Nm, Nm, Nm]
      upper_force_thresholds_acceleration: [20.0, 20.0, 20.0, 25.0, 25.0, 25.0]  # [N, N, N, Nm, Nm, Nm]
      lower_force_thresholds_nominal: [20.0, 20.0, 20.0, 25.0, 25.0, 25.0]  # [N, N, N, Nm, Nm, Nm]
      upper_force_thresholds_nominal: [20.0, 20.0, 20.0, 25.0, 25.0, 25.0]  # [N, N, N, Nm, Nm, Nm]
    
    singularity_warning_threshold:    0.0001               # print a warning if the smallest singular value of J x J^T drops below this value (use -1 to disable)
    tau_ext_lowpass_filter:           1.0                  # Exponential Moving average filter: range between and zero (infinite delay) one (no filtering)         
