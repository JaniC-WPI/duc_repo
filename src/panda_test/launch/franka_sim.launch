<launch>
    <!-- <include file="$(find encoderless_vs)/launch/loadParams.launch" /> -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find panda_test)/worlds/environment.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="recording" value="false"/>
      <arg name="debug" value="false"/>
    </include>

    <!-- Spawn Franka into Gazebo -->
    <param name="robot_description" command="$(find xacro)/xacro $(find panda_test)/urdf/franka_sim.xacro" />
    <!-- <param name="robot_description" command="$(find xacro)/xacro $(find active_vision)/desc/franka_camera.xacro" />  -->
    <node name="spawn_franka_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model panda -z 1.015" />

    <!-- <param name="robot_description" command="$(find xacro)/xacro $(find active_vision)/desc/franka_camera.xacro" /> -->
    <rosparam file="$(find panda_test)/config/encoderless_control.yaml" command="load" />

    <!-- Launch controllers -->
    <node name="stopped_panda_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="--stopped joint1_position_controller joint2_position_controller 
                  joint3_position_controller joint4_position_controller joint5_position_controller joint6_position_controller joint7_position_controller" ns="/panda" />
    <node name="panda_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="joint_state_controller joint1_velocity_controller joint2_velocity_controller 
                  joint3_velocity_controller joint4_velocity_controller joint5_velocity_controller joint6_velocity_controller joint7_velocity_controller" ns="/panda" />
    <node name="panda_finger_pos_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="panda_finger1_controller panda_finger2_controller" ns="/panda" />

    <!-- Kinematics test node -->
    <!-- <node name="kinematics_test" pkg="panda_test" type="kinematics_test.py" output="screen"/> -->
    <!-- <node name="kp_gen_test" pkg="panda_test" type="kp_gen_test.py" output="screen"/> -->
    <!-- <node name="workspace_pub" pkg="panda_test" type="workspace_control.py" output="screen"/> -->
  
    <!-- Launch controller for robot joints -->
    <!-- <rosparam file="$(find active_vision)/config/panda_control.yaml" command="load"/> -->
    <!-- <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
      <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
      <param name="robot_ip" value="$(arg robot_ip)" /> 
    </node> -->

    <!-- <rosparam command="load" file="$(find franka_control)/config/encoderless_vs_controllers.yaml" />
    <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller joint_group_velocity_controller"/>
    <node name="stopped_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="stopped position_joint_trajectory_controller "/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
      <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
      <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
      <param name="rate" value="30"/>
    </node>
    <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
      <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired, franka_gripper/joint_states] </rosparam>
      <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
      <param name="rate" value="30"/>
      <remap from="/joint_states" to="/joint_states_desired" />
    </node>  -->


    <!-- Launch controllers -->
    <!-- <node name="panda_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="joint_state_controller gazebo_ros_control" ns="/panda" />
    <node name="panda_finger_pos_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="panda_finger1_controller panda_finger2_controller" ns="/panda" /> -->

    <!-- Start publishing to /tf for rviz -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true">
      <remap from="joint_states" to="panda/joint_states" />
    </node>

    
        
    <!-- Launch controller for robot joints -->
        

</launch>

