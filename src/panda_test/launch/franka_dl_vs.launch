<launch>
    <!-- Load YAML -->
    <rosparam file="$(find panda_test)/config/franka_dl_config.yaml" command="load"/>
    <rosparam file="$(find panda_test)/config/dl_features.yaml" command="load"/>
    <include file="$(find realsense2_camera)/launch/rs_aligned_depth.launch"/>

    <!-- Launch Realsense Camera & marker detection -->
    <!-- <include file="$(find panda_test)/launch/rs_origami.launch"/> -->
    
    <!-- Launch the control point generation services -->
    <include file="$(find panda_test)/launch/franka_dl_control_service.launch"/>

    <node name="set_auto_exposure_rgb" pkg="dynamic_reconfigure" type="dynparam" args="set /camera/rgb_camera enable_auto_exposure False"/>


    <!-- Joint publisher interface -->
    <node name="franka_joint_pub" pkg="panda_test" type="franka_joint_pub" output="screen" />
    
    <!-- Jacobian update -->
    <node name="franka_dl_energy_function_node" pkg="panda_test" type="franka_dl_energy_func_node" output = "screen"/>
    
    <!-- Set stiffness Service -->
    <!-- <node name="franka_stiffness_service" pkg="encoderless_vs" type="franka_joint_impedance.py" output="screen" respawn="false" /> -->
    
    <!-- Control node -->
    <!-- single goal -->
    <node name="franka_dl_vs" pkg="panda_test" type="franka_dl_controller_node" output="screen" respawn="false" />
    <!-- multiple goal -->
    <!-- <node name="franka_sim_vs" pkg="panda_test" type="franka_sim_controller_node" output="screen" respawn="false" /> -->

    <!-- Data record -->
    <!-- single goal recorder -->
    <node name="franka_dl_vs_recorder" pkg="panda_test" type="franka_dl_record_node" output="screen" respawn="false" />
    <!-- multiple goal recorder -->
    <!-- <node name="franka_sim_vs_recorder" pkg="panda_test" type="franka_sim_record_node" output="screen" respawn="false" /> -->
    <node name="Image_writer" pkg="panda_test" type="img_write.py" output="log" respawn="false" />
    <!-- <node name="depth_writer" pkg="panda_test" type="depth_write.py" output="screen" respawn="false" /> -->
    
    <!-- Visualization node -->
    <node name="franka_dl_vs_vis" pkg="panda_test" type="franka_dl_vs_vis_node_3f.py" output="screen" respawn="false" required="true" />
    <node name="goal_img_pub" pkg="panda_test" type="franka_dl_goal_img_pub.py" output="screen" respawn="false"/>

    <!-- publish multiple references -->
    <!-- <node name="franka_multiref" pkg="encoderless_vs" type="multiref.py" output="screen" /> -->

    <!-- publish pick and place command -->
    <!-- <node name="franka_pick_place" pkg="encoderless_vs" type="franka_skel_grasp.py" output="screen" /> -->

    <node name="franka_image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
        <!-- <param name="autosize" value="true" /> -->
    	<remap from="image" to="/franka/vs/vis" />
    </node>

</launch>

